import json
import os
import subprocess
import time

import pyautogui

import config
import generate_2fa
from generate_2fa import generate_2fa

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
STEAM_PATH = config.STEAM_PATH
ACCOUNTS_DIR = config.ACCOUNTS_DIR
ACCOUNTS_FILE = config.ACCOUNTS_FILE  # –§–∞–π–ª —Å –ª–æ–≥–∏–Ω–∞–º–∏:–ø–∞—Ä–æ–ª—è–º–∏
DELAY = config.DELAY


def load_mafile(account_name):
    """–ó–∞–≥—Ä—É–∑–∫–∞ .mafile"""
    path = os.path.join(ACCOUNTS_DIR, f"{account_name}.mafile")
    with open(path, 'r', encoding='utf-8') as f:
        return json.load(f)


def load_accounts():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–∏–Ω–æ–≤ –∏ –ø–∞—Ä–æ–ª–µ–π"""
    accounts = {}
    if os.path.exists(ACCOUNTS_FILE):
        with open(ACCOUNTS_FILE, 'r', encoding='utf-8') as f:
            for line in f:
                if ':' in line:
                    login, password = line.strip().split(':', 1)
                    accounts[login] = password
    return accounts


def find_mafile_accounts():
    """–ü–æ–∏—Å–∫ –≤—Å–µ—Ö .mafile —Ñ–∞–π–ª–æ–≤ –≤ ACCOUNTS_DIR"""
    print(f"[DEBUG] –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ: {ACCOUNTS_DIR}")
    mafiles = []
    try:
        for f in os.listdir(ACCOUNTS_DIR):
            print(f"[DEBUG] –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {f}")
            if f.lower().endswith('.mafile'):
                mafiles.append(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –ø–∞–ø–∫–µ {ACCOUNTS_DIR}: {e}")
        return []

    accounts = [os.path.splitext(f)[0] for f in mafiles]
    print(f"[DEBUG] –ù–∞–π–¥–µ–Ω–æ .mafile —Ñ–∞–π–ª–æ–≤: {len(accounts)}")
    return accounts


def kill_process(name):
    """–ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
    os.system(f"taskkill /f /im {name}.exe >nul 2>&1")
    time.sleep(2)


def clear_steam_auth_data():
    """–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Steam"""
    print("[INFO] –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Steam...")
    kill_process("steam")  # –ó–∞–∫—Ä—ã–≤–∞–µ–º Steam
    # –£–¥–∞–ª—è–µ–º loginusers.vdf
    loginusers_path = os.path.join(os.path.dirname(STEAM_PATH), "config", "loginusers.vdf")
    try:
        if os.path.exists(loginusers_path):
            os.remove(loginusers_path)
            print(f"[INFO] –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {loginusers_path}")
        else:
            print(f"[INFO] –§–∞–π–ª {loginusers_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ loginusers.vdf: {e}")
    # –£–¥–∞–ª—è–µ–º –∫—ç—à Steam
    cache_path = os.path.join(os.path.dirname(STEAM_PATH), "appcache")
    try:
        if os.path.exists(cache_path):
            for item in os.listdir(cache_path):
                item_path = os.path.join(cache_path, item)
                if os.path.isfile(item_path):
                    os.remove(item_path)
                    print(f"[INFO] –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –∫—ç—à–∞: {item_path}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞: {e}")


def login(account, password, shared_secret):
    """–ü—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞"""
    clear_steam_auth_data()
    kill_process("steam")

    # –ó–∞–ø—É—Å–∫ Steam
    subprocess.Popen(STEAM_PATH)
    time.sleep(DELAY * 2)

    # –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    pyautogui.typewrite(account)
    pyautogui.press('tab')
    pyautogui.typewrite(password)
    pyautogui.press('enter')
    time.sleep(DELAY)

    # –í–≤–æ–¥ 2FA
    code = generate_2fa(shared_secret)
    pyautogui.typewrite(code)
    pyautogui.press('enter')
    print(f"üîë {account} | –ö–æ–¥ 2FA: {code}")
    time.sleep(DELAY * 2)


def main():
    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ä–∞—Å–∫–ª–∞–¥–∫–µ
    print("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ —Ä–∞—Å–∫–ª–∞–¥–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫—É—é (US English)!")
    print(f"‚è≥ –î–∞—ë–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å–º–µ–Ω—ã —Ä–∞—Å–∫–ª–∞–¥–∫–∏...")
    time.sleep(5)  # –ü–∞—É–∑–∞ –¥–ª—è —Å–º–µ–Ω—ã —Ä–∞—Å–∫–ª–∞–¥–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    os.makedirs(ACCOUNTS_DIR, exist_ok=True)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–æ–ª–∏
    passwords = load_accounts()
    if not passwords:
        with open(ACCOUNTS_FILE, 'w', encoding='utf-8') as f:
            f.write("–ª–æ–≥–∏–Ω1:–ø–∞—Ä–æ–ª—å1\n–ª–æ–≥–∏–Ω2:–ø–∞—Ä–æ–ª—å2")
        print(f"üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª {ACCOUNTS_FILE}. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ!")
        return

    while True:
        # –ü–æ–∏—Å–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å .mafile
        mafile_accounts = find_mafile_accounts()
        if not mafile_accounts:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ .mafile —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫–µ", ACCOUNTS_DIR)
            return

        print("\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
        for i, account in enumerate(mafile_accounts, 1):
            print(f"{i}. {account}")

        # –ó–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
        try:
            choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞ (–∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞): ")
            if choice.lower() == 'q':
                break

            choice = int(choice)
            if choice < 1 or choice > len(mafile_accounts):
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞!")
                continue

            account = mafile_accounts[choice - 1]
            print(f"\nüöÄ –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç: {account}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–∞—Ä–æ–ª—è
            password = passwords.get(account)
            if not password:
                print(f"‚ùå –ü–∞—Ä–æ–ª—å –¥–ª—è {account} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {ACCOUNTS_FILE}!")
                continue

            # –ó–∞–≥—Ä—É–∑–∫–∞ mafile –∏ –≤—Ö–æ–¥
            try:
                mafile = load_mafile(account)
                login(account, password, mafile['shared_secret'])

                input("\n‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                kill_process("steam")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                input("\n‚è≥ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                kill_process("steam")

        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞!")
            continue


if __name__ == "__main__":
    pyautogui.FAILSAFE = True
    main()
